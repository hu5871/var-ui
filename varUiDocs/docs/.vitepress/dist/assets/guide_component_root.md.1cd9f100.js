import{_ as d,r as a,o as s,c as n,b as r,a as t}from"./app.08cfbb32.js";const v=JSON.parse('{"title":"root 根节点","description":"","frontmatter":{},"headers":[{"level":3,"title":"兼容性","slug":"兼容性","link":"#兼容性","children":[]},{"level":3,"title":"Props","slug":"props","link":"#props","children":[]},{"level":3,"title":"插槽","slug":"插槽","link":"#插槽","children":[]},{"level":3,"title":"APIs","slug":"apis","link":"#apis","children":[]}],"relativePath":"guide/component/root.md","lastUpdated":1690801272000}'),l={name:"guide/component/root.md"},o=t(`<h1 id="root-根节点" tabindex="-1">root 根节点 <a class="header-anchor" href="#root-根节点" aria-hidden="true">#</a></h1><p>root 作为页面的根节点，轻松配置加载状态，和网络检测</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-root</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">ref</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">v-root</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,3),i=t('<h3 id="兼容性" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性" aria-hidden="true">#</a></h3><p>计划是所有组件全端兼容</p><div class="vp-table__container"><table><thead><tr><th>app-vue</th><th>微信小程序</th><th>h5</th></tr></thead><tbody><tr><td>支持</td><td>支持</td><td>支持</td></tr></tbody></table></div><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h3><div class="vp-table__container"><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th style="text-align:left;">描述</th><th>可选值</th></tr></thead><tbody><tr><td style="text-align:center;">bgColor</td><td style="text-align:center;">String</td><td style="text-align:center;">-</td><td style="text-align:left;">背景颜色</td><td>合法的颜色值</td></tr><tr><td style="text-align:center;">margin</td><td style="text-align:center;">Array</td><td style="text-align:center;">[0,0]</td><td style="text-align:left;">外边距</td><td>拟同css ,数组长度为4</td></tr><tr><td style="text-align:center;">padding</td><td style="text-align:center;">Array</td><td style="text-align:center;">[0,0]</td><td style="text-align:left;">内边距</td><td>拟同css ,数组长度为4</td></tr></tbody></table></div><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-hidden="true">#</a></h3><div class="vp-table__container"><table><thead><tr><th>name</th></tr></thead><tbody><tr><td>default</td></tr></tbody></table></div><h3 id="apis" tabindex="-1">APIs <a class="header-anchor" href="#apis" aria-hidden="true">#</a></h3><div class="vp-table__container"><table><thead><tr><th>emit事件</th><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>netWorkChange</td><td>-</td><td>网路发生变化时触发,函数参数可得{isConnected,networkType},isConnected是否连接，networkType网络类型</td></tr></tbody></table></div><h4 id="ref方法" tabindex="-1">ref方法 <a class="header-anchor" href="#ref方法" aria-hidden="true">#</a></h4><div class="vp-table__container"><table><thead><tr><th>方法名</th><th>参数</th><th>描述</th><th></th></tr></thead><tbody><tr><td>showModal</td><td><em>MessageOptions</em>，见下方，更多信息请查看message组件</td><td>显示message弹窗</td><td></td></tr><tr><td>hideModal</td><td>-</td><td>关闭message弹窗</td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table></div><h4 id="messageoptions" tabindex="-1">MessageOptions <a class="header-anchor" href="#messageoptions" aria-hidden="true">#</a></h4><div class="vp-table__container"><table><thead><tr><th>key(键)</th><th>value(默认值)</th><th>类型</th><th>可选值</th><th>描述</th><th>必填</th></tr></thead><tbody><tr><td>model</td><td>-</td><td>String</td><td></td><td>模式</td><td>否</td></tr><tr><td>title</td><td>-</td><td>String</td><td></td><td>titel文本</td><td>是</td></tr><tr><td>icon</td><td>-</td><td>String</td><td></td><td>icon名称</td><td>当model为空时，为必填</td></tr><tr><td>duration</td><td>1500（毫秒）</td><td>Number</td><td></td><td>持续时间</td><td>否</td></tr><tr><td>rota</td><td>false</td><td>Boolean</td><td>true/false</td><td>icon是否旋转</td><td>否</td></tr><tr><td>bgColor</td><td>-</td><td>ring</td><td></td><td>弹窗整体颜色</td><td>否</td></tr><tr><td>size</td><td>100</td><td>Number</td><td></td><td>icon大小</td><td>否</td></tr><tr><td>isMask</td><td>true</td><td>Boolean</td><td>true/false</td><td>是否需要遮罩层</td><td>否</td></tr><tr><td>iconColor</td><td>-</td><td>String</td><td></td><td>icon颜色</td><td>否</td></tr></tbody></table></div>',13);function h(p,c,y,_,g,b){const e=a("webview");return s(),n("div",null,[o,r(e,{url:"/pages/common/root"}),i])}const m=d(l,[["render",h]]);export{v as __pageData,m as default};
