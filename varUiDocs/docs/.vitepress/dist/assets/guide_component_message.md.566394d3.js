import{_ as a,r as d,o as s,c as l,b as n,d as t,e as r,a as o}from"./app.08cfbb32.js";const v=JSON.parse('{"title":"message 消息提示","description":"","frontmatter":{},"headers":[{"level":3,"title":"兼容性","slug":"兼容性","link":"#兼容性","children":[]},{"level":3,"title":"Props","slug":"props","link":"#props","children":[]},{"level":3,"title":"默认提供的模式","slug":"默认提供的模式","link":"#默认提供的模式","children":[]},{"level":3,"title":"ref方法","slug":"ref方法","link":"#ref方法","children":[]},{"level":3,"title":"options参数","slug":"options参数","link":"#options参数","children":[]},{"level":3,"title":"插槽","slug":"插槽","link":"#插槽","children":[]}],"relativePath":"guide/component/message.md","lastUpdated":1690801272000}'),i={name:"guide/component/message.md"},c=t("h1",{id:"message-消息提示",tabindex:"-1"},[r("message 消息提示 "),t("a",{class:"header-anchor",href:"#message-消息提示","aria-hidden":"true"},"#")],-1),p=t("p",null,"消息提示弹出层，向用户反馈执行结果等场景。",-1),h=o(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-root</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-message</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">ref</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-message</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">v-root</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="兼容性" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性" aria-hidden="true">#</a></h3><p>计划是所有组件全端兼容</p><div class="vp-table__container"><table><thead><tr><th>app-vue</th><th>微信小程序</th><th>h5</th></tr></thead><tbody><tr><td>支持</td><td>支持</td><td>支持</td></tr></tbody></table></div><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h3><div class="vp-table__container"><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th style="text-align:left;">描述</th><th>可选值</th></tr></thead><tbody><tr><td style="text-align:center;">width</td><td style="text-align:center;">Number</td><td style="text-align:center;">350</td><td style="text-align:left;">宽度</td><td></td></tr><tr><td style="text-align:center;">height</td><td style="text-align:center;">Number</td><td style="text-align:center;">3000</td><td style="text-align:left;">高度</td><td></td></tr><tr><td style="text-align:center;"><em>round</em></td><td style="text-align:center;">Number</td><td style="text-align:center;">30</td><td style="text-align:left;">圆角</td><td></td></tr><tr><td style="text-align:center;">zIndex</td><td style="text-align:center;">Number</td><td style="text-align:center;">10075</td><td style="text-align:left;">层级</td><td></td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:left;"></td><td></td></tr></tbody></table></div><h3 id="默认提供的模式" tabindex="-1">默认提供的模式 <a class="header-anchor" href="#默认提供的模式" aria-hidden="true">#</a></h3><div class="vp-table__container"><table><thead><tr><th>模式名称</th><th>描述</th></tr></thead><tbody><tr><td>loading</td><td>loading状态，不会自动关闭，需要手动关闭</td></tr><tr><td>success</td><td>成功状态，倒计时关闭</td></tr><tr><td>fail</td><td>失败状态，倒计时关闭</td></tr><tr><td>warn</td><td>警告状态，倒计时关闭</td></tr></tbody></table></div><h3 id="ref方法" tabindex="-1">ref方法 <a class="header-anchor" href="#ref方法" aria-hidden="true">#</a></h3><div class="vp-table__container"><table><thead><tr><th>方法名称</th><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>showModal</td><td>options对象，见下方</td><td>显示消息提示</td></tr><tr><td>hideModal</td><td>无</td><td>关闭消息提示</td></tr><tr><td></td><td></td><td></td></tr></tbody></table></div><h3 id="options参数" tabindex="-1">options参数 <a class="header-anchor" href="#options参数" aria-hidden="true">#</a></h3><div class="vp-table__container"><table><thead><tr><th>键</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>model</td><td>loading、success、fail、warn, 不填为自定义</td><td>默认提供的模式</td></tr><tr><td>icon</td><td>-</td><td>icon名称</td></tr><tr><td>iconColor</td><td>-</td><td>icon颜色</td></tr><tr><td>size</td><td>100</td><td>icon大小</td></tr><tr><td>title</td><td>-</td><td>标题</td></tr><tr><td>isMask</td><td>true</td><td>遮罩层</td></tr><tr><td>bgColor</td><td>white</td><td>背景色</td></tr><tr><td>rota</td><td>false</td><td>icon是否旋转</td></tr><tr><td>duration</td><td>1500</td><td>倒计时关闭（毫秒）</td></tr></tbody></table></div><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-hidden="true">#</a></h3><p>无</p>`,14);function y(g,b,_,u,x,D){const e=d("webview");return s(),l("div",null,[c,p,n(e,{url:"/pages/feedback/message"}),h])}const m=a(i,[["render",y]]);export{v as __pageData,m as default};
